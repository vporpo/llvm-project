; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 3
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=-9999 %s -S -sbvec-passes=boup-vectorize | FileCheck %s --check-prefix=VECTOR
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=99999 %s -S -sbvec-passes=boup-vectorize | FileCheck %s --check-prefix=SCALAR

define <2 x float> @pack_load_and_const(ptr noalias %ptr) {
;
; VECTOR-LABEL: define <2 x float> @pack_load_and_const(
; VECTOR-SAME: ptr noalias [[PTR:%.*]]) {
; VECTOR-NEXT:    [[LD0:%.*]] = load float, ptr [[PTR]], align 4
; VECTOR-NEXT:    [[INS:%.*]] = insertelement <2 x float> <float 0.000000e+00, float poison>, float [[LD0]], i32 0
; VECTOR-NEXT:    ret <2 x float> [[INS]]
;
; SCALAR-LABEL: define <2 x float> @pack_load_and_const(
; SCALAR-SAME: ptr noalias [[PTR:%.*]]) {
; SCALAR-NEXT:    [[LD0:%.*]] = load float, ptr [[PTR]], align 4
; SCALAR-NEXT:    [[INS:%.*]] = insertelement <2 x float> <float 0.000000e+00, float poison>, float [[LD0]], i32 0
; SCALAR-NEXT:    ret <2 x float> [[INS]]
;
  %ld0 = load float, ptr %ptr
  %ins = insertelement <2 x float> <float 0.000000e+00, float poison>, float %ld0, i32 0
  ret <2 x float> %ins
}
