; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 3
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=-9999 %s -S | FileCheck %s --check-prefix=VECTOR
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=99999 %s -S | FileCheck %s --check-prefix=SCALAR
;
; l0  l1  l1  l1
;  \ /     \ /
;   -       -
;   |       |
;   S       S
define void @partial_match(ptr noalias %ptr) {
;
; VECTOR-LABEL: define void @partial_match(
; VECTOR-SAME: ptr noalias [[PTR:%.*]]) {
; VECTOR-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; VECTOR-NEXT:    [[VECL:%.*]] = load <2 x float>, ptr [[PTR0]], align 4
; VECTOR-NEXT:    [[SHUF:%.*]] = shufflevector <2 x float> [[VECL]], <2 x float> poison, <2 x i32> <i32 1, i32 1>
; VECTOR-NEXT:    [[VEC:%.*]] = fsub <2 x float> [[VECL]], [[SHUF]]
; VECTOR-NEXT:    store <2 x float> [[VEC]], ptr [[PTR0]], align 4
; VECTOR-NEXT:    ret void
;
; SCALAR-LABEL: define void @partial_match(
; SCALAR-SAME: ptr noalias [[PTR:%.*]]) {
; SCALAR-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; SCALAR-NEXT:    [[PTR1:%.*]] = getelementptr float, ptr [[PTR]], i32 1
; SCALAR-NEXT:    [[LD0:%.*]] = load float, ptr [[PTR0]], align 4
; SCALAR-NEXT:    [[LD1:%.*]] = load float, ptr [[PTR1]], align 4
; SCALAR-NEXT:    [[SUB0:%.*]] = fsub float [[LD0]], [[LD1]]
; SCALAR-NEXT:    [[SUB1:%.*]] = fsub float [[LD1]], [[LD1]]
; SCALAR-NEXT:    store float [[SUB0]], ptr [[PTR0]], align 4
; SCALAR-NEXT:    store float [[SUB1]], ptr [[PTR1]], align 4
; SCALAR-NEXT:    ret void
;
  %ptr0 = getelementptr float, ptr %ptr, i32 0
  %ptr1 = getelementptr float, ptr %ptr, i32 1

  %ld0 = load float, ptr %ptr0
  %ld1 = load float, ptr %ptr1

  %sub0 = fsub float %ld0, %ld1
  %sub1 = fsub float %ld1, %ld1

  store float %sub0, ptr %ptr0
  store float %sub1, ptr %ptr1
  ret void
}
