; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 3
; RUN: opt -passes=sandbox-vectorizer -sbvec-passes=boup-vectorize,accept-or-revert -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=-9999 %s -S | FileCheck %s --check-prefix=VECTOR
; RUN: opt -passes=sandbox-vectorizer -sbvec-passes=boup-vectorize,accept-or-revert -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=99999 %s -S | FileCheck %s --check-prefix=SCALAR
;
; BB1 | L0        L0
;     | |\        |\
;     +----------------
;     | |  \ 0.0  |  \ 1.0
;     | |   \ /   |   \ /
; BB2 | |    *    |    *
;     |  \  /      \ /
;     |   -         -
;     |   |         |
;     |   S         S
define void @widen_with_pack_reuse_from_other_bb(ptr noalias %ptr) {
;
; VECTOR-LABEL: define void @widen_with_pack_reuse_from_other_bb(
; VECTOR-SAME: ptr noalias [[PTR:%.*]]) {
; VECTOR-NEXT:  bb1:
; VECTOR-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; VECTOR-NEXT:    [[LD0:%.*]] = load float, ptr [[PTR0]], align 4
; VECTOR-NEXT:    br label [[BB2:%.*]]
; VECTOR:       bb2:
; VECTOR-NEXT:    [[PACK2:%.*]] = insertelement <2 x float> poison, float [[LD0]], i64 0
; VECTOR-NEXT:    [[PACK3:%.*]] = insertelement <2 x float> [[PACK2]], float [[LD0]], i64 1
; VECTOR-NEXT:    [[PACK:%.*]] = insertelement <2 x float> poison, float [[LD0]], i64 0
; VECTOR-NEXT:    [[PACK1:%.*]] = insertelement <2 x float> [[PACK]], float [[LD0]], i64 1
; VECTOR-NEXT:    [[VEC:%.*]] = fmul <2 x float> [[PACK3]], <float 0.000000e+00, float 1.000000e+00>
; VECTOR-NEXT:    [[VEC4:%.*]] = fsub <2 x float> [[PACK1]], [[VEC]]
; VECTOR-NEXT:    store <2 x float> [[VEC4]], ptr [[PTR0]], align 4
; VECTOR-NEXT:    ret void
;
; SCALAR-LABEL: define void @widen_with_pack_reuse_from_other_bb(
; SCALAR-SAME: ptr noalias [[PTR:%.*]]) {
; SCALAR-NEXT:  bb1:
; SCALAR-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; SCALAR-NEXT:    [[PTR1:%.*]] = getelementptr float, ptr [[PTR]], i32 1
; SCALAR-NEXT:    [[LD0:%.*]] = load float, ptr [[PTR0]], align 4
; SCALAR-NEXT:    br label [[BB2:%.*]]
; SCALAR:       bb2:
; SCALAR-NEXT:    [[MUL0:%.*]] = fmul float [[LD0]], 0.000000e+00
; SCALAR-NEXT:    [[MUL1:%.*]] = fmul float [[LD0]], 1.000000e+00
; SCALAR-NEXT:    [[SUB0:%.*]] = fsub float [[LD0]], [[MUL0]]
; SCALAR-NEXT:    [[SUB1:%.*]] = fsub float [[LD0]], [[MUL1]]
; SCALAR-NEXT:    store float [[SUB0]], ptr [[PTR0]], align 4
; SCALAR-NEXT:    store float [[SUB1]], ptr [[PTR1]], align 4
; SCALAR-NEXT:    ret void
;
bb1:
  %ptr0 = getelementptr float, ptr %ptr, i32 0
  %ptr1 = getelementptr float, ptr %ptr, i32 1

  %ld0 = load float, ptr %ptr0
  br label %bb2

bb2:
  %mul0 = fmul float %ld0, 0.0
  %mul1 = fmul float %ld0, 1.0
  %sub0 = fsub float %ld0, %mul0
  %sub1 = fsub float %ld0, %mul1
  store float %sub0, ptr %ptr0
  store float %sub1, ptr %ptr1
  ret void
}
