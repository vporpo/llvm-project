; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 4
; RUN: opt -passes=sandbox-vectorizer -sbvec-passes=pack-reuse -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=-9999 %s -S | FileCheck %s

define void @pack_reuse(ptr noalias %ptr) {
; CHECK-LABEL: define void @pack_reuse(
; CHECK-SAME: ptr noalias [[PTR:%.*]]) {
; CHECK-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; CHECK-NEXT:    [[LD0:%.*]] = load float, ptr [[PTR0]], align 4
; CHECK-NEXT:    [[PACKA0:%.*]] = insertelement <2 x float> poison, float [[LD0]], i64 0
; CHECK-NEXT:    [[PACKA1:%.*]] = insertelement <2 x float> [[PACKA0]], float [[LD0]], i64 1, !sb [[META0:![0-9]+]]
; CHECK-NEXT:    [[VECMUL:%.*]] = fmul <2 x float> [[PACKA1]], [[PACKA1]], !sb [[META0]]
; CHECK-NEXT:    [[VECSUB:%.*]] = fsub <2 x float> [[PACKA1]], [[VECMUL]], !sb [[META0]]
; CHECK-NEXT:    store <2 x float> [[VECSUB]], ptr [[PTR0]], align 4, !sb [[META0]]
; CHECK-NEXT:    ret void
;
  %ptr0 = getelementptr float, ptr %ptr, i32 0
  %ld0 = load float, ptr %ptr0, align 4
  %PackA0 = insertelement <2 x float> poison, float %ld0, i64 0
  %PackA1 = insertelement <2 x float> %PackA0, float %ld0, i64 1, !sb !0

  %PackB0 = insertelement <2 x float> poison, float %ld0, i64 0
  %PackB1 = insertelement <2 x float> %PackB0, float %ld0, i64 1, !sb !0

  %PackC0 = insertelement <2 x float> poison, float %ld0, i64 0
  %PackC1 = insertelement <2 x float> %PackC0, float %ld0, i64 1, !sb !0

  %VecMul = fmul <2 x float> %PackA1, %PackB1, !sb !0

  %VecSub = fsub <2 x float> %PackC1, %VecMul, !sb !0
  store <2 x float> %VecSub, ptr %ptr0, align 4, !sb !0
  ret void
}

!0 = !{!"region", i32 0}
;.
; CHECK: [[META0]] = !{!"region", i32 0}
;.
