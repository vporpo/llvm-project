; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 3
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=-9999 %s -S | FileCheck %s --check-prefix=VECTOR
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=99999 %s -S | FileCheck %s --check-prefix=SCALAR

define void @widen_extracts(ptr noalias %ptr, float %val) {
;
; VECTOR-LABEL: define void @widen_extracts(
; VECTOR-SAME: ptr noalias [[PTR:%.*]], float [[VAL:%.*]]) {
; VECTOR-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; VECTOR-NEXT:    [[VECLD:%.*]] = load <2 x float>, ptr [[PTR]], align 8
; VECTOR-NEXT:    store <2 x float> [[VECLD]], ptr [[PTR0]], align 4
; VECTOR-NEXT:    ret void
;
; SCALAR-LABEL: define void @widen_extracts(
; SCALAR-SAME: ptr noalias [[PTR:%.*]], float [[VAL:%.*]]) {
; SCALAR-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; SCALAR-NEXT:    [[PTR1:%.*]] = getelementptr float, ptr [[PTR]], i32 1
; SCALAR-NEXT:    [[VECLD:%.*]] = load <2 x float>, ptr [[PTR]], align 8
; SCALAR-NEXT:    [[EXTR0:%.*]] = extractelement <2 x float> [[VECLD]], i32 0
; SCALAR-NEXT:    [[EXTR1:%.*]] = extractelement <2 x float> [[VECLD]], i32 1
; SCALAR-NEXT:    store float [[EXTR0]], ptr [[PTR0]], align 4
; SCALAR-NEXT:    store float [[EXTR1]], ptr [[PTR1]], align 4
; SCALAR-NEXT:    ret void
;
  %ptr0 = getelementptr float, ptr %ptr, i32 0
  %ptr1 = getelementptr float, ptr %ptr, i32 1

  %vecld = load <2 x float>, ptr %ptr
  %extr0 = extractelement <2 x float> %vecld, i32 0
  %extr1 = extractelement <2 x float> %vecld, i32 1
  store float %extr0, ptr %ptr0
  store float %extr1, ptr %ptr1
  ret void
}
