; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=-9999 %s -S | FileCheck %s --check-prefix=VECTOR
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=99999 %s -S | FileCheck %s --check-prefix=SCALAR

define void @widen(ptr %ptr) {
; VECTOR-LABEL: define void @widen
; VECTOR-SAME: (ptr [[PTR:%.*]]) {
; VECTOR-NEXT:  bbA:
; VECTOR-NEXT:    [[PTRA0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; VECTOR-NEXT:    [[VECL1:%.*]] = load <2 x float>, ptr [[PTRA0]], align 4
; VECTOR-NEXT:    store <2 x float> [[VECL1]], ptr [[PTRA0]], align 4
; VECTOR-NEXT:    br label [[BBB:%.*]]
; VECTOR:       bbB:
; VECTOR-NEXT:    [[PTRB0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; VECTOR-NEXT:    [[VECL:%.*]] = load <2 x float>, ptr [[PTRB0]], align 4
; VECTOR-NEXT:    store <2 x float> [[VECL]], ptr [[PTRB0]], align 4
; VECTOR-NEXT:    ret void
;
; SCALAR-LABEL: define void @widen
; SCALAR-SAME: (ptr [[PTR:%.*]]) {
; SCALAR-NEXT:  bbA:
; SCALAR-NEXT:    [[PTRA0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; SCALAR-NEXT:    [[PTRA1:%.*]] = getelementptr float, ptr [[PTR]], i32 1
; SCALAR-NEXT:    [[LDA0:%.*]] = load float, ptr [[PTRA0]], align 4
; SCALAR-NEXT:    [[LDA1:%.*]] = load float, ptr [[PTRA1]], align 4
; SCALAR-NEXT:    store float [[LDA0]], ptr [[PTRA0]], align 4
; SCALAR-NEXT:    store float [[LDA1]], ptr [[PTRA1]], align 4
; SCALAR-NEXT:    br label [[BBB:%.*]]
; SCALAR:       bbB:
; SCALAR-NEXT:    [[PTRB0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; SCALAR-NEXT:    [[PTRB1:%.*]] = getelementptr float, ptr [[PTR]], i32 1
; SCALAR-NEXT:    [[LDB0:%.*]] = load float, ptr [[PTRB0]], align 4
; SCALAR-NEXT:    [[LDB1:%.*]] = load float, ptr [[PTRB1]], align 4
; SCALAR-NEXT:    store float [[LDB0]], ptr [[PTRB0]], align 4
; SCALAR-NEXT:    store float [[LDB1]], ptr [[PTRB1]], align 4
; SCALAR-NEXT:    ret void
;
bbA:
  %ptrA0 = getelementptr float, ptr %ptr, i32 0
  %ptrA1 = getelementptr float, ptr %ptr, i32 1
  %ldA0 = load float, ptr %ptrA0
  %ldA1 = load float, ptr %ptrA1
  store float %ldA0, ptr %ptrA0
  store float %ldA1, ptr %ptrA1
  br label %bbB

bbB:
  %ptrB0 = getelementptr float, ptr %ptr, i32 0
  %ptrB1 = getelementptr float, ptr %ptr, i32 1
  %ldB0 = load float, ptr %ptrB0
  %ldB1 = load float, ptr %ptrB1
  store float %ldB0, ptr %ptrB0
  store float %ldB1, ptr %ptrB1
  ret void
}
