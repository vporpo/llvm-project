; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 4
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=-9999 %s -S | FileCheck %s
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=-9999 -sbvec-disable-store-seeds %s -S | FileCheck %s --check-prefix=DISABLE

define void @store_seeds(ptr %ptr, i8 %ld0, i8 %ld1) {
; CHECK-LABEL: define void @store_seeds(
; CHECK-SAME: ptr [[PTR:%.*]], i8 [[LD0:%.*]], i8 [[LD1:%.*]]) {
; CHECK-NEXT:    [[PACK:%.*]] = insertelement <2 x i8> poison, i8 [[LD0]], i64 0
; CHECK-NEXT:    [[PACK1:%.*]] = insertelement <2 x i8> [[PACK]], i8 [[LD1]], i64 1, !sb [[META0:![0-9]+]]
; CHECK-NEXT:    [[GEP0:%.*]] = getelementptr i8, ptr [[PTR]], i32 0
; CHECK-NEXT:    store <2 x i8> [[PACK1]], ptr [[GEP0]], align 1, !sb [[META0]]
; CHECK-NEXT:    ret void
;
; DISABLE-LABEL: define void @store_seeds(
; DISABLE-SAME: ptr [[PTR:%.*]], i8 [[LD0:%.*]], i8 [[LD1:%.*]]) {
; DISABLE-NEXT:    [[GEP0:%.*]] = getelementptr i8, ptr [[PTR]], i32 0
; DISABLE-NEXT:    [[GEP1:%.*]] = getelementptr i8, ptr [[PTR]], i32 1
; DISABLE-NEXT:    store i8 [[LD0]], ptr [[GEP0]], align 1
; DISABLE-NEXT:    store i8 [[LD1]], ptr [[GEP1]], align 1
; DISABLE-NEXT:    ret void
;
  %gep0 = getelementptr i8, ptr %ptr, i32 0
  %gep1 = getelementptr i8, ptr %ptr, i32 1
  store i8 %ld0, ptr %gep0
  store i8 %ld1, ptr %gep1
  ret void
}


define void @store_seeds_with_gap1(ptr %ptr) {
; CHECK-LABEL: define void @store_seeds_with_gap1(
; CHECK-SAME: ptr [[PTR:%.*]]) {
; CHECK-NEXT:    [[GEP0:%.*]] = getelementptr i8, ptr [[PTR]], i32 0
; CHECK-NEXT:    [[GEP1:%.*]] = getelementptr i8, ptr [[PTR]], i32 2
; CHECK-NEXT:    [[LD0:%.*]] = load i8, ptr [[GEP0]], align 1
; CHECK-NEXT:    [[LD1:%.*]] = load i8, ptr [[GEP1]], align 1
; CHECK-NEXT:    store i8 [[LD0]], ptr [[GEP0]], align 1
; CHECK-NEXT:    store i8 [[LD1]], ptr [[GEP1]], align 1
; CHECK-NEXT:    ret void
;
; DISABLE-LABEL: define void @store_seeds_with_gap1(
; DISABLE-SAME: ptr [[PTR:%.*]]) {
; DISABLE-NEXT:    [[GEP0:%.*]] = getelementptr i8, ptr [[PTR]], i32 0
; DISABLE-NEXT:    [[GEP1:%.*]] = getelementptr i8, ptr [[PTR]], i32 2
; DISABLE-NEXT:    [[LD0:%.*]] = load i8, ptr [[GEP0]], align 1
; DISABLE-NEXT:    [[LD1:%.*]] = load i8, ptr [[GEP1]], align 1
; DISABLE-NEXT:    store i8 [[LD0]], ptr [[GEP0]], align 1
; DISABLE-NEXT:    store i8 [[LD1]], ptr [[GEP1]], align 1
; DISABLE-NEXT:    ret void
;
  %gep0 = getelementptr i8, ptr %ptr, i32 0
  %gep1 = getelementptr i8, ptr %ptr, i32 2
  %ld0 = load i8, ptr %gep0
  %ld1 = load i8, ptr %gep1
  store i8 %ld0, ptr %gep0
  store i8 %ld1, ptr %gep1
  ret void
}
;.
; CHECK: [[META0]] = !{!"region", i32 0}
;.
