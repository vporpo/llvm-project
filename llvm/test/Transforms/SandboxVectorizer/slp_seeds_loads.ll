; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 4
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=-9999 %s -S | FileCheck %s
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=-9999 -sbvec-disable-load-seeds %s -S | FileCheck %s --check-prefix=DISABLE
; XFAIL: *

define void @load_seeds(ptr %ptr) {
; CHECK-LABEL: define void @load_seeds(
; CHECK-SAME: ptr [[PTR:%.*]]) {
; CHECK-NEXT:    [[GEP0:%.*]] = getelementptr i8, ptr [[PTR]], i32 0
; CHECK-NEXT:    [[GEP1:%.*]] = getelementptr i8, ptr [[PTR]], i32 1
; CHECK-NEXT:    [[VECL:%.*]] = load <2 x i8>, ptr [[GEP0]], align 1, !sb [[META0:![0-9]+]]
; CHECK-NEXT:    ret void
;
; DISABLE-LABEL: define void @load_seeds(
; DISABLE-SAME: ptr [[PTR:%.*]]) {
; DISABLE-NEXT:    [[GEP0:%.*]] = getelementptr i8, ptr [[PTR]], i32 0
; DISABLE-NEXT:    [[GEP1:%.*]] = getelementptr i8, ptr [[PTR]], i32 1
; DISABLE-NEXT:    [[LD0:%.*]] = load i8, ptr [[GEP0]], align 1
; DISABLE-NEXT:    [[LD1:%.*]] = load i8, ptr [[GEP1]], align 1
; DISABLE-NEXT:    ret void
;
  %gep0 = getelementptr i8, ptr %ptr, i32 0
  %gep1 = getelementptr i8, ptr %ptr, i32 1
  %ld0 = load i8, ptr %gep0
  %ld1 = load i8, ptr %gep1
  ret void
}
;.
; CHECK: [[META0]] = !{!"region", i32 0}
;.
