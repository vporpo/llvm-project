; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 3
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=-9999 -sbvec-allow-non-pow2 %s -S | FileCheck %s --check-prefix=VECTOR
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=99999 %s -S | FileCheck %s --check-prefix=SCALAR

define void @widen_vectors(ptr noalias %ptr) {
;
; VECTOR-LABEL: define void @widen_vectors(
; VECTOR-SAME: ptr noalias [[PTR:%.*]]) {
; VECTOR-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; VECTOR-NEXT:    [[VECL:%.*]] = load <4 x float>, ptr [[PTR0]], align 8
; VECTOR-NEXT:    store <4 x float> [[VECL]], ptr [[PTR0]], align 8
; VECTOR-NEXT:    ret void
;
; SCALAR-LABEL: define void @widen_vectors(
; SCALAR-SAME: ptr noalias [[PTR:%.*]]) {
; SCALAR-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; SCALAR-NEXT:    [[PTR1:%.*]] = getelementptr float, ptr [[PTR]], i32 2
; SCALAR-NEXT:    [[LD0:%.*]] = load <2 x float>, ptr [[PTR0]], align 8
; SCALAR-NEXT:    [[LD1:%.*]] = load <2 x float>, ptr [[PTR1]], align 8
; SCALAR-NEXT:    store <2 x float> [[LD0]], ptr [[PTR0]], align 8
; SCALAR-NEXT:    store <2 x float> [[LD1]], ptr [[PTR1]], align 8
; SCALAR-NEXT:    ret void
;
  %ptr0 = getelementptr float, ptr %ptr, i32 0
  %ptr1 = getelementptr float, ptr %ptr, i32 2
  %ld0 = load <2 x float>, ptr %ptr0
  %ld1 = load <2 x float>, ptr %ptr1
  store <2 x float> %ld0, ptr %ptr0
  store <2 x float> %ld1, ptr %ptr1
  ret void
}

define void @widen_vectors_diff_types1(ptr noalias %ptr) {
;
; VECTOR-LABEL: define void @widen_vectors_diff_types1(
; VECTOR-SAME: ptr noalias [[PTR:%.*]]) {
; VECTOR-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; VECTOR-NEXT:    [[VECL:%.*]] = load <3 x float>, ptr [[PTR0]], align 4
; VECTOR-NEXT:    store <3 x float> [[VECL]], ptr [[PTR0]], align 4
; VECTOR-NEXT:    ret void
;
; SCALAR-LABEL: define void @widen_vectors_diff_types1(
; SCALAR-SAME: ptr noalias [[PTR:%.*]]) {
; SCALAR-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; SCALAR-NEXT:    [[PTR1:%.*]] = getelementptr float, ptr [[PTR]], i32 1
; SCALAR-NEXT:    [[LD0:%.*]] = load float, ptr [[PTR0]], align 4
; SCALAR-NEXT:    [[LD1:%.*]] = load <2 x float>, ptr [[PTR1]], align 8
; SCALAR-NEXT:    store float [[LD0]], ptr [[PTR0]], align 4
; SCALAR-NEXT:    store <2 x float> [[LD1]], ptr [[PTR1]], align 8
; SCALAR-NEXT:    ret void
;
  %ptr0 = getelementptr float, ptr %ptr, i32 0
  %ptr1 = getelementptr float, ptr %ptr, i32 1
  %ld0 = load float, ptr %ptr0
  %ld1 = load <2 x float>, ptr %ptr1
  store float %ld0, ptr %ptr0
  store <2 x float> %ld1, ptr %ptr1
  ret void
}

define void @widen_vectors_diff_types2(ptr noalias %ptr) {
;
; VECTOR-LABEL: define void @widen_vectors_diff_types2(
; VECTOR-SAME: ptr noalias [[PTR:%.*]]) {
; VECTOR-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; VECTOR-NEXT:    [[VECL:%.*]] = load <3 x float>, ptr [[PTR0]], align 8
; VECTOR-NEXT:    store <3 x float> [[VECL]], ptr [[PTR0]], align 8
; VECTOR-NEXT:    ret void
;
; SCALAR-LABEL: define void @widen_vectors_diff_types2(
; SCALAR-SAME: ptr noalias [[PTR:%.*]]) {
; SCALAR-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; SCALAR-NEXT:    [[PTR1:%.*]] = getelementptr float, ptr [[PTR]], i32 2
; SCALAR-NEXT:    [[LD0:%.*]] = load <2 x float>, ptr [[PTR0]], align 8
; SCALAR-NEXT:    [[LD1:%.*]] = load float, ptr [[PTR1]], align 4
; SCALAR-NEXT:    store <2 x float> [[LD0]], ptr [[PTR0]], align 8
; SCALAR-NEXT:    store float [[LD1]], ptr [[PTR1]], align 4
; SCALAR-NEXT:    ret void
;
  %ptr0 = getelementptr float, ptr %ptr, i32 0
  %ptr1 = getelementptr float, ptr %ptr, i32 2
  %ld0 = load <2 x float>, ptr %ptr0
  %ld1 = load float, ptr %ptr1
  store <2 x float> %ld0, ptr %ptr0
  store float %ld1, ptr %ptr1
  ret void
}
