; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=-9999 %s -S -sbvec-dag-size-limit=0 | FileCheck %s --check-prefix=LIMIT0
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=-9999 %s -S -sbvec-dag-size-limit=1 | FileCheck %s --check-prefix=LIMIT1
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=-9999 %s -S -sbvec-dag-size-limit=2 | FileCheck %s --check-prefix=LIMIT2
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=-9999 %s -S -sbvec-dag-size-limit=3 | FileCheck %s --check-prefix=LIMIT3

define void @widen(ptr %ptr) {
; LIMIT0-LABEL: define void @widen(
; LIMIT0-SAME: ptr [[PTR:%.*]]) {
; LIMIT0-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; LIMIT0-NEXT:    [[PTR1:%.*]] = getelementptr float, ptr [[PTR]], i32 1
; LIMIT0-NEXT:    [[LD0:%.*]] = load float, ptr [[PTR0]], align 4
; LIMIT0-NEXT:    [[LD1:%.*]] = load float, ptr [[PTR1]], align 4
; LIMIT0-NEXT:    store float [[LD0]], ptr [[PTR0]], align 4
; LIMIT0-NEXT:    store float [[LD1]], ptr [[PTR1]], align 4
; LIMIT0-NEXT:    ret void
;
; LIMIT1-LABEL: define void @widen(
; LIMIT1-SAME: ptr [[PTR:%.*]]) {
; LIMIT1-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; LIMIT1-NEXT:    [[PTR1:%.*]] = getelementptr float, ptr [[PTR]], i32 1
; LIMIT1-NEXT:    [[LD0:%.*]] = load float, ptr [[PTR0]], align 4
; LIMIT1-NEXT:    [[LD1:%.*]] = load float, ptr [[PTR1]], align 4
; LIMIT1-NEXT:    [[PACK:%.*]] = insertelement <2 x float> poison, float [[LD0]], i64 0
; LIMIT1-NEXT:    [[PACK1:%.*]] = insertelement <2 x float> [[PACK]], float [[LD1]], i64 1, !sb [[META0:![0-9]+]]
; LIMIT1-NEXT:    store <2 x float> [[PACK1]], ptr [[PTR0]], align 4, !sb [[META0]]
; LIMIT1-NEXT:    ret void
;
; LIMIT2-LABEL: define void @widen(
; LIMIT2-SAME: ptr [[PTR:%.*]]) {
; LIMIT2-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; LIMIT2-NEXT:    [[PTR1:%.*]] = getelementptr float, ptr [[PTR]], i32 1
; LIMIT2-NEXT:    [[LD0:%.*]] = load float, ptr [[PTR0]], align 4
; LIMIT2-NEXT:    [[LD1:%.*]] = load float, ptr [[PTR1]], align 4
; LIMIT2-NEXT:    [[PACK:%.*]] = insertelement <2 x float> poison, float [[LD0]], i64 0
; LIMIT2-NEXT:    [[PACK1:%.*]] = insertelement <2 x float> [[PACK]], float [[LD1]], i64 1, !sb [[META0:![0-9]+]]
; LIMIT2-NEXT:    store <2 x float> [[PACK1]], ptr [[PTR0]], align 4, !sb [[META0]]
; LIMIT2-NEXT:    ret void
;
; LIMIT3-LABEL: define void @widen(
; LIMIT3-SAME: ptr [[PTR:%.*]]) {
; LIMIT3-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; LIMIT3-NEXT:    [[VECL:%.*]] = load <2 x float>, ptr [[PTR0]], align 4, !sb [[META0:![0-9]+]]
; LIMIT3-NEXT:    store <2 x float> [[VECL]], ptr [[PTR0]], align 4, !sb [[META0]]
; LIMIT3-NEXT:    ret void
;
  %ptr0 = getelementptr float, ptr %ptr, i32 0
  %ptr1 = getelementptr float, ptr %ptr, i32 1
  %ld0 = load float, ptr %ptr0
  %ld1 = load float, ptr %ptr1
  store float %ld0, ptr %ptr0
  store float %ld1, ptr %ptr1
  ret void
}
;.
; LIMIT1: [[META0]] = !{!"region", i32 0}
;.
; LIMIT2: [[META0]] = !{!"region", i32 0}
;.
; LIMIT3: [[META0]] = !{!"region", i32 0}
;.
