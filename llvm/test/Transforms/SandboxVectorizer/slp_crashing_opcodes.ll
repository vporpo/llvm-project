; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 3
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=-9999 %s -S | FileCheck %s --check-prefix=VECTOR
; RUN: opt -passes=sandbox-vectorizer -sbvec-vec-reg-bits=512 -sbvec-cost-threshold=99999 %s -S | FileCheck %s --check-prefix=SCALAR
;
; Check for opcodes that used to crash or used to be unsupported.
define void @opcodes(ptr %ptr, i1 %cond, float %a0, float %a1, float %b0, float %b1) {
;
; VECTOR-LABEL: define void @opcodes(
; VECTOR-SAME: ptr [[PTR:%.*]], i1 [[COND:%.*]], float [[A0:%.*]], float [[A1:%.*]], float [[B0:%.*]], float [[B1:%.*]]) {
; VECTOR-NEXT:    [[PACK4:%.*]] = insertelement <2 x float> poison, float [[B0]], i64 0
; VECTOR-NEXT:    [[PACK5:%.*]] = insertelement <2 x float> [[PACK4]], float [[B1]], i64 1
; VECTOR-NEXT:    [[PACK2:%.*]] = insertelement <2 x float> poison, float [[A0]], i64 0
; VECTOR-NEXT:    [[PACK3:%.*]] = insertelement <2 x float> [[PACK2]], float [[A1]], i64 1
; VECTOR-NEXT:    [[PACK:%.*]] = insertelement <2 x i1> poison, i1 [[COND]], i64 0
; VECTOR-NEXT:    [[PACK1:%.*]] = insertelement <2 x i1> [[PACK]], i1 [[COND]], i64 1
; VECTOR-NEXT:    [[VEC:%.*]] = select <2 x i1> [[PACK1]], <2 x float> [[PACK3]], <2 x float> [[PACK5]]
; VECTOR-NEXT:    [[VEC6:%.*]] = fneg <2 x float> [[VEC]]
; VECTOR-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; VECTOR-NEXT:    store <2 x float> [[VEC6]], ptr [[PTR0]], align 4
; VECTOR-NEXT:    ret void
;
; SCALAR-LABEL: define void @opcodes(
; SCALAR-SAME: ptr [[PTR:%.*]], i1 [[COND:%.*]], float [[A0:%.*]], float [[A1:%.*]], float [[B0:%.*]], float [[B1:%.*]]) {
; SCALAR-NEXT:    [[SEL0:%.*]] = select i1 [[COND]], float [[A0]], float [[B0]]
; SCALAR-NEXT:    [[SEL1:%.*]] = select i1 [[COND]], float [[A1]], float [[B1]]
; SCALAR-NEXT:    [[FNEG0:%.*]] = fneg float [[SEL0]]
; SCALAR-NEXT:    [[FNEG1:%.*]] = fneg float [[SEL1]]
; SCALAR-NEXT:    [[PTR0:%.*]] = getelementptr float, ptr [[PTR]], i32 0
; SCALAR-NEXT:    [[PTR1:%.*]] = getelementptr float, ptr [[PTR]], i32 1
; SCALAR-NEXT:    store float [[FNEG0]], ptr [[PTR0]], align 4
; SCALAR-NEXT:    store float [[FNEG1]], ptr [[PTR1]], align 4
; SCALAR-NEXT:    ret void
;
  %sel0 = select i1 %cond, float %a0, float %b0
  %sel1 = select i1 %cond, float %a1, float %b1
  %fneg0 = fneg float %sel0
  %fneg1 = fneg float %sel1
  %ptr0 = getelementptr float, ptr %ptr, i32 0
  %ptr1 = getelementptr float, ptr %ptr, i32 1
  store float %fneg0, ptr %ptr0
  store float %fneg1, ptr %ptr1
  ret void
}
